# Generated by Django 3.0.7 on 2020-12-27 06:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_agent', models.BooleanField(default=False)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Afeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=100)),
                ('status', models.CharField(default='', max_length=100)),
                ('description', models.CharField(default='', max_length=500)),
                ('name', models.CharField(default='', max_length=100)),
                ('address', models.CharField(default='', max_length=200)),
                ('area', models.IntegerField(default=0)),
                ('bathroom', models.IntegerField(default=0)),
                ('bedroom', models.IntegerField(default=0)),
                ('masterroom', models.BooleanField(default=False, verbose_name='masterroom')),
                ('balcony', models.BooleanField(default=False, verbose_name='balcony')),
                ('parking', models.BooleanField(default=False, verbose_name='parking')),
                ('lift', models.BooleanField(default=False, verbose_name='lift')),
                ('storeroom', models.BooleanField(default=False, verbose_name='storeroom')),
                ('swimming', models.BooleanField(default=False, verbose_name='swimming')),
                ('builder', models.CharField(default='', max_length=100)),
                ('price', models.IntegerField(default=0)),
                ('image', models.FileField(default='', null=True, upload_to='images/', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Ufeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='', max_length=100)),
                ('description', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('a_mobile', models.CharField(default='', max_length=10)),
                ('a_address', models.CharField(blank=True, default='', max_length=200)),
                ('a_company_name', models.CharField(default='', max_length=30)),
                ('a_company_address', models.CharField(default='', max_length=500)),
                ('a_company_mobile', models.CharField(default='', max_length=10)),
                ('a_company_email', models.EmailField(default='', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('c_mobile', models.IntegerField(default=0)),
                ('c_address', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(upload_to='images/')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='real_estate.Property')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='real_estate.Agent'),
        ),
    ]
